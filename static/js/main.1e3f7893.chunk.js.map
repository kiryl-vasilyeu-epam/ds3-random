{"version":3,"sources":["data/weapons.js","data/shields.js","data/catalysts.js","data/spells.js","data/locations.js","data/classes.js","data/index.js","helpers.js","Character.js","Components/Levelization.js","Components/ItemRandomizer.js","Components/LocationsItems.js","Components/SearchItems.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["weapons","JSON","parse","shields","catalysts","spells","locations","classes","name","lvl","Vigor","Attunement","Endurance","Vitality","Strength","Dexterity","Intelligence","Faith","Luck","leftHand","rightHand","allItems","catalystsToMagicPairs","Staves","Talismans","Chimes","skippedTypes","stats","attunementSlots","getRandomFromArray","array","Math","floor","random","length","getNearestSlotsCount","attunement","slotsCount","i","findInAllItems","itemName","item","Object","keys","forEach","itemType","possibleItem","find","isItemInList","list","newList","listType","push","filterAllItems","value","itemTypes","filteredItems","data","filter","toLowerCase","includes","Character","savedData","getCharToSave","className","founded","spellSlots","state","updateStats","stat","isLower","currentStat","updateRandomLvl","updateRandomLevels","count","updated","setFounded","type","sItem","removeFounded","checkRequirements","withCoeff","getRandomItemByStatsMeet","coeff","types","foundedItems","possibleItems","requirements","randomItem","console","log","getRandomSpells","slotsLeft","stopper","spellTypes","possibleSpells","spell","Slots","rest","map","getRandomItems","weapon","shield","catalyst","a","this","weaponName","spellName","Container","styled","div","StatsContainer","InfoContainer","ControlsContainer","StatChangeContainer","StatContainer","StatName","p","Button","button","Input","input","Updated","Levelization","lastUpdated","renderAllStats","props","onClick","updateStat","handleChange","event","target","Number","isNaN","setState","updateOneLvl","updateLevels","onChange","Component","ItemsContainer","ItemContainer","HandContainer","ItemRandomizer","renderItems","renderSpells","clear","Location","LocationHeader","h2","LocationItemContainer","active","LocationItem","LocationsItems","renderLocationsData","locationName","checked","defaultChecked","ContentContainer","SearchContainer","Item","ItemHeader","ItemItemContainer","ItemItem","Search","SearchItems","renderItemsData","itemsToRender","STORAGE_KEY","localStorage","window","RowContainer","App","char","saveCharToStorage","setItem","stringify","updateChar","prevState","updatedData","resetCharacter","removeItem","location","reload","savedChar","getItem","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAGeA,EAFCC,KAAKC,MADJ,+4tBCGFC,EAFCF,KAAKC,MADJ,gsPCGFE,EAFGH,KAAKC,MADJ,6pGCCbG,EAASJ,KAAKC,MADJ,u4UCmMDI,EAnMG,CAChB,kBAAmB,CACjB,wBACA,mBACA,oBACA,iBAGF,uBAAwB,CACtB,wBACA,UACA,OACA,eACA,aACA,2BACA,SACA,UACA,YAGF,oBAAqB,CACnB,uBACA,OACA,kBACA,qBACA,eACA,wBACA,WACA,UACA,qBACA,mBACA,aACA,uBACA,YAGF,qBAAsB,CACpB,cACA,sBACA,qBACA,0BACA,qBACA,uBACA,uBACA,mBAGF,cAAe,CACb,aACA,WACA,kBACA,sBACA,cACA,qBAGF,wBAAyB,CACvB,WACA,oBACA,eACA,yBACA,2BACA,eACA,eACA,sBACA,iBAGF,mBAAoB,CAClB,yBACA,wBACA,0BACA,sBACA,mBACA,iBACA,wBACA,iBACA,kBACA,mBACA,2BACA,qBACA,oBACA,YAGF,gCAAiC,CAC/B,wBACA,aACA,mCACA,wBACA,oBAGF,mBAAoB,CAClB,kBACA,UACA,kBAGF,mBAAoB,CAClB,qBACA,cACA,qBAGF,aAAc,CACZ,wBAGF,iBAAkB,CAChB,wBACA,SACA,WACA,UACA,kBACA,oBACA,oBACA,iBACA,aACA,6BACA,4BACA,4BACA,wBACA,uBACA,QACA,0BACA,wBACA,yBACA,iBAGF,kBAAmB,CACjB,sBAGF,kBAAmB,CACjB,uBAGF,iBAAkB,CAChB,SACA,0BACA,2BACA,sBACA,uBACA,eACA,uBACA,cACA,iBAGF,4BAA6B,CAC3B,sBACA,sBACA,oBACA,eACA,oBACA,mBACA,iBACA,kBACA,iBACA,cACA,cACA,6BACA,gBACA,cACA,uBAGF,gBAAiB,CACf,oBACA,oBACA,kBACA,qBACA,2BACA,uBACA,oBACA,mBACA,kBAGF,kBAAmB,CACjB,oBACA,yBACA,2BACA,sBACA,uBACA,mCACA,sBACA,+BACA,4BACA,oBC5BWC,EAnKC,CACd,CACEC,KAAM,SACNC,IAAK,EACLC,MAAO,GACPC,WAA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","file":"static/js/main.1e3f7893.chunk.js","sourcesContent":["const weaponsData = `[{\"name\":\"Millwood Greatbow\",\"requirements\":{\"Strength\":28,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatbows\"},{\"name\":\"Dragonslayer Greatbow\",\"requirements\":{\"Strength\":20,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatbows\"},{\"name\":\"Onislayer Greatbow\",\"requirements\":{\"Strength\":18,\"Dexterity\":24,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatbows\"},{\"name\":\"Earth Seeker\",\"requirements\":{\"Strength\":24,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":15},\"type\":\"Greataxes\"},{\"name\":\"Yhorm's Great Machete\",\"requirements\":{\"Strength\":38,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greataxes\"},{\"name\":\"Great Machete\",\"requirements\":{\"Strength\":24,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greataxes\"},{\"name\":\"Greataxe\",\"requirements\":{\"Strength\":32,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greataxes\"},{\"name\":\"Dragonslayer Greataxe\",\"requirements\":{\"Strength\":40,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greataxes\"},{\"name\":\"Black Knight Greataxe\",\"requirements\":{\"Strength\":36,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greataxes\"},{\"name\":\"Demon's Great Axe\",\"requirements\":{\"Strength\":28,\"Dexterity\":0,\"Intelligence\":12,\"Faith\":12},\"type\":\"Greataxes\"},{\"name\":\"Demon's Fist\",\"requirements\":{\"Strength\":20,\"Dexterity\":8,\"Intelligence\":9,\"Faith\":9},\"type\":\"Fists\"},{\"name\":\"Dark Hand\",\"requirements\":{\"Strength\":0,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Fists\"},{\"name\":\"Caestus\",\"requirements\":{\"Strength\":5,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Fists\"},{\"name\":\"Aquamarine Dagger\",\"requirements\":{\"Strength\":5,\"Dexterity\":14,\"Intelligence\":18,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Murky Hand Scythe\",\"requirements\":{\"Strength\":6,\"Dexterity\":11,\"Intelligence\":11,\"Faith\":11},\"type\":\"Daggers\"},{\"name\":\"Mail Breaker\",\"requirements\":{\"Strength\":7,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Rotten Ghru Dagger\",\"requirements\":{\"Strength\":10,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Tailbone Short Sword\",\"requirements\":{\"Strength\":8,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Scholar's Candlestick\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":16},\"type\":\"Daggers\"},{\"name\":\"Parrying Dagger\",\"requirements\":{\"Strength\":5,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Harpe\",\"requirements\":{\"Strength\":8,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Handmaid's Dagger\",\"requirements\":{\"Strength\":4,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Dagger\",\"requirements\":{\"Strength\":5,\"Dexterity\":9,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Corvian Greatknife\",\"requirements\":{\"Strength\":12,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Brigand Twindaggers\",\"requirements\":{\"Strength\":10,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Bandit's Knife\",\"requirements\":{\"Strength\":6,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Daggers\"},{\"name\":\"Harald Curved Greatsword\",\"requirements\":{\"Strength\":22,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Greatswords\"},{\"name\":\"Carthus Curved Greatsword\",\"requirements\":{\"Strength\":18,\"Dexterity\":22,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Greatswords\"},{\"name\":\"Old Wolf Curved Sword\",\"requirements\":{\"Strength\":19,\"Dexterity\":25,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Greatswords\"},{\"name\":\"Exile Greatsword\",\"requirements\":{\"Strength\":24,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Greatswords\"},{\"name\":\"Murakumo\",\"requirements\":{\"Strength\":20,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Greatswords\"},{\"name\":\"Demon's Scar\",\"requirements\":{\"Strength\":0,\"Dexterity\":16,\"Intelligence\":17,\"Faith\":17},\"type\":\"Curved Swords\"},{\"name\":\"Follower Sabre\",\"requirements\":{\"Strength\":9,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Crescent Moon Sword\",\"requirements\":{\"Strength\":10,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Rotten Ghru Curved Sword\",\"requirements\":{\"Strength\":10,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Carthus Shotel\",\"requirements\":{\"Strength\":12,\"Dexterity\":19,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Warden Twinblades\",\"requirements\":{\"Strength\":10,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Storm Curved Sword\",\"requirements\":{\"Strength\":14,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Shotel\",\"requirements\":{\"Strength\":9,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Sellsword Twinblades\",\"requirements\":{\"Strength\":10,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Pontiff Knight Curved Sword\",\"requirements\":{\"Strength\":12,\"Dexterity\":18,\"Intelligence\":10,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Scimitar\",\"requirements\":{\"Strength\":7,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Painting Guardian's Curved Sword\",\"requirements\":{\"Strength\":7,\"Dexterity\":19,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Falchion\",\"requirements\":{\"Strength\":9,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Dancer's Enchanted Swords\",\"requirements\":{\"Strength\":12,\"Dexterity\":20,\"Intelligence\":9,\"Faith\":9},\"type\":\"Curved Swords\"},{\"name\":\"Carthus Curved Sword\",\"requirements\":{\"Strength\":15,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Curved Swords\"},{\"name\":\"Follower Torch\",\"requirements\":{\"Strength\":14,\"Dexterity\":0,\"Intelligence\":10,\"Faith\":10},\"type\":\"Torches\"},{\"name\":\"Repeating Crossbow\",\"requirements\":{\"Strength\":16,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Heavy Crossbow\",\"requirements\":{\"Strength\":14,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Sniper Crossbow\",\"requirements\":{\"Strength\":18,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Light Crossbow\",\"requirements\":{\"Strength\":10,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Knight's Crossbow\",\"requirements\":{\"Strength\":12,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Avelyn\",\"requirements\":{\"Strength\":16,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Arbalest\",\"requirements\":{\"Strength\":18,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Crossbows\"},{\"name\":\"Ringed Knight Spear\",\"requirements\":{\"Strength\":15,\"Dexterity\":17,\"Intelligence\":0,\"Faith\":0},\"type\":\"Pikes\"},{\"name\":\"Lothric War Banner\",\"requirements\":{\"Strength\":14,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Pikes\"},{\"name\":\"Pike\",\"requirements\":{\"Strength\":18,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Pikes\"},{\"name\":\"Lothric Knight Long Spear\",\"requirements\":{\"Strength\":14,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Pikes\"},{\"name\":\"Greatlance\",\"requirements\":{\"Strength\":21,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Pikes\"},{\"name\":\"Blacksmith Hammer\",\"requirements\":{\"Strength\":13,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Warpick\",\"requirements\":{\"Strength\":12,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Reinforced Club\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Morning Star\",\"requirements\":{\"Strength\":11,\"Dexterity\":9,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Mace\",\"requirements\":{\"Strength\":12,\"Dexterity\":7,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Heysel Pick\",\"requirements\":{\"Strength\":12,\"Dexterity\":10,\"Intelligence\":19,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Drang Hammers\",\"requirements\":{\"Strength\":18,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Club\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Hammers\"},{\"name\":\"Crow Talons\",\"requirements\":{\"Strength\":6,\"Dexterity\":19,\"Intelligence\":0,\"Faith\":0},\"type\":\"Claws\"},{\"name\":\"Manikin Claws\",\"requirements\":{\"Strength\":8,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Claws\"},{\"name\":\"Claw\",\"requirements\":{\"Strength\":6,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Claws\"},{\"name\":\"Rose of Ariandel\",\"requirements\":{\"Strength\":10,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":17},\"type\":\"Whips\"},{\"name\":\"Spotted Whip\",\"requirements\":{\"Strength\":9,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Whips\"},{\"name\":\"Witch's Locks\",\"requirements\":{\"Strength\":9,\"Dexterity\":17,\"Intelligence\":12,\"Faith\":12},\"type\":\"Whips\"},{\"name\":\"Whip\",\"requirements\":{\"Strength\":6,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Whips\"},{\"name\":\"Notched Whip\",\"requirements\":{\"Strength\":6,\"Dexterity\":19,\"Intelligence\":0,\"Faith\":0},\"type\":\"Whips\"},{\"name\":\"Ringed Knight Paired Greatswords\",\"requirements\":{\"Strength\":40,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Lothric Knight Greatsword\",\"requirements\":{\"Strength\":24,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Zweihander\",\"requirements\":{\"Strength\":19,\"Dexterity\":11,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Profaned Greatsword\",\"requirements\":{\"Strength\":22,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Lorian's Greatsword\",\"requirements\":{\"Strength\":26,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Greatsword\",\"requirements\":{\"Strength\":28,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Fume Ultra Greatsword\",\"requirements\":{\"Strength\":50,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Farron Greatsword\",\"requirements\":{\"Strength\":18,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Cathedral Knight Greatsword\",\"requirements\":{\"Strength\":26,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Black Knight Greatsword\",\"requirements\":{\"Strength\":30,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Astora Greatsword\",\"requirements\":{\"Strength\":16,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Ultra Greatswords\"},{\"name\":\"Crow Quills\",\"requirements\":{\"Strength\":9,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Thrusting Swords\"},{\"name\":\"Crystal Sage's Rapier\",\"requirements\":{\"Strength\":13,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Thrusting Swords\"},{\"name\":\"Estoc\",\"requirements\":{\"Strength\":10,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Thrusting Swords\"},{\"name\":\"Irithyll Rapier\",\"requirements\":{\"Strength\":10,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Thrusting Swords\"},{\"name\":\"Rapier\",\"requirements\":{\"Strength\":7,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Thrusting Swords\"},{\"name\":\"Ricard's Rapier\",\"requirements\":{\"Strength\":8,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Thrusting Swords\"},{\"name\":\"Ringed Knight Straight Sword\",\"requirements\":{\"Strength\":17,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Valorheart\",\"requirements\":{\"Strength\":12,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Cleric's Candlestick\",\"requirements\":{\"Strength\":8,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":12},\"type\":\"Straight Swords\"},{\"name\":\"Broken Straight Sword\",\"requirements\":{\"Strength\":8,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Dark Sword\",\"requirements\":{\"Strength\":16,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Gotthard Twinswords\",\"requirements\":{\"Strength\":12,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Irithyll Straight Sword\",\"requirements\":{\"Strength\":12,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Long Sword\",\"requirements\":{\"Strength\":10,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Lothric's Holy Sword\",\"requirements\":{\"Strength\":10,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":14},\"type\":\"Straight Swords\"},{\"name\":\"Lothric Knight Sword\",\"requirements\":{\"Strength\":11,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Morion Blade\",\"requirements\":{\"Strength\":12,\"Dexterity\":17,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Shortsword\",\"requirements\":{\"Strength\":8,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Sunlight Straight Sword\",\"requirements\":{\"Strength\":12,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":16},\"type\":\"Straight Swords\"},{\"name\":\"Anri's Straight Sword\",\"requirements\":{\"Strength\":10,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Astora Straight Sword\",\"requirements\":{\"Strength\":10,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":12},\"type\":\"Straight Swords\"},{\"name\":\"Barbed Straight Sword\",\"requirements\":{\"Strength\":11,\"Dexterity\":11,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Broadsword\",\"requirements\":{\"Strength\":10,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Straight Swords\"},{\"name\":\"Follower Javelin\",\"requirements\":{\"Strength\":12,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Arstor's Spear\",\"requirements\":{\"Strength\":11,\"Dexterity\":19,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Yorshka's Spear\",\"requirements\":{\"Strength\":18,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":13},\"type\":\"Spears\"},{\"name\":\"Winged Spear\",\"requirements\":{\"Strength\":12,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Tailbone Spear\",\"requirements\":{\"Strength\":13,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Spear\",\"requirements\":{\"Strength\":11,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Soldering Iron\",\"requirements\":{\"Strength\":10,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Saint Bident\",\"requirements\":{\"Strength\":12,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":16},\"type\":\"Spears\"},{\"name\":\"Rotten Ghru Spear\",\"requirements\":{\"Strength\":10,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Partizan\",\"requirements\":{\"Strength\":14,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Golden Ritual Spear\",\"requirements\":{\"Strength\":10,\"Dexterity\":10,\"Intelligence\":18,\"Faith\":14},\"type\":\"Spears\"},{\"name\":\"Gargoyle Flame Spear\",\"requirements\":{\"Strength\":15,\"Dexterity\":18,\"Intelligence\":9,\"Faith\":9},\"type\":\"Spears\"},{\"name\":\"Four-Pronged Plow\",\"requirements\":{\"Strength\":13,\"Dexterity\":11,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Drang Twinspears\",\"requirements\":{\"Strength\":14,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Dragonslayer Swordspear\",\"requirements\":{\"Strength\":16,\"Dexterity\":22,\"Intelligence\":0,\"Faith\":18},\"type\":\"Spears\"},{\"name\":\"Dragonslayer Spear\",\"requirements\":{\"Strength\":20,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Spears\"},{\"name\":\"Friede's Great Scythe\",\"requirements\":{\"Strength\":12,\"Dexterity\":16,\"Intelligence\":12,\"Faith\":11},\"type\":\"Reapers\"},{\"name\":\"Great Corvian Scythe\",\"requirements\":{\"Strength\":16,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Reapers\"},{\"name\":\"Great Scythe\",\"requirements\":{\"Strength\":14,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Reapers\"},{\"name\":\"Pontiff Knight Great Scythe\",\"requirements\":{\"Strength\":14,\"Dexterity\":19,\"Intelligence\":0,\"Faith\":12},\"type\":\"Reapers\"},{\"name\":\"Frayed Blade\",\"requirements\":{\"Strength\":11,\"Dexterity\":40,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Black Blade\",\"requirements\":{\"Strength\":18,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Bloodlust\",\"requirements\":{\"Strength\":11,\"Dexterity\":24,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Chaos Blade\",\"requirements\":{\"Strength\":16,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Darkdrift\",\"requirements\":{\"Strength\":10,\"Dexterity\":28,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Onikiri and Ubadachi\",\"requirements\":{\"Strength\":13,\"Dexterity\":25,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Uchigatana\",\"requirements\":{\"Strength\":11,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Washing Pole\",\"requirements\":{\"Strength\":18,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Katanas\"},{\"name\":\"Crucifix of the Mad King\",\"requirements\":{\"Strength\":19,\"Dexterity\":0,\"Intelligence\":10,\"Faith\":14},\"type\":\"Halberds\"},{\"name\":\"Splitleaf Greatsword\",\"requirements\":{\"Strength\":26,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Black Knight Glaive\",\"requirements\":{\"Strength\":28,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Glaive\",\"requirements\":{\"Strength\":17,\"Dexterity\":11,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Crescent Axe\",\"requirements\":{\"Strength\":14,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Gundyr's Halberd\",\"requirements\":{\"Strength\":30,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Halberd\",\"requirements\":{\"Strength\":16,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Immolation Tinder\",\"requirements\":{\"Strength\":18,\"Dexterity\":18,\"Intelligence\":12,\"Faith\":12},\"type\":\"Halberds\"},{\"name\":\"Lucerne\",\"requirements\":{\"Strength\":15,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Red Hilted Halberd\",\"requirements\":{\"Strength\":14,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Winged Knight Halberd\",\"requirements\":{\"Strength\":26,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Halberds\"},{\"name\":\"Gael's Greatsword\",\"requirements\":{\"Strength\":19,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Onyx Blade\",\"requirements\":{\"Strength\":14,\"Dexterity\":12,\"Intelligence\":15,\"Faith\":15},\"type\":\"Greatswords\"},{\"name\":\"Claymore\",\"requirements\":{\"Strength\":16,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Drakeblood Greatsword\",\"requirements\":{\"Strength\":18,\"Dexterity\":16,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Executioner's Greatsword\",\"requirements\":{\"Strength\":19,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Firelink Greatsword\",\"requirements\":{\"Strength\":20,\"Dexterity\":10,\"Intelligence\":10,\"Faith\":10},\"type\":\"Greatswords\"},{\"name\":\"Flamberge\",\"requirements\":{\"Strength\":15,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Greatsword of Judgment\",\"requirements\":{\"Strength\":17,\"Dexterity\":15,\"Intelligence\":12,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Hollowslayer Greatsword\",\"requirements\":{\"Strength\":14,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Moonlight Greatsword\",\"requirements\":{\"Strength\":16,\"Dexterity\":11,\"Intelligence\":26,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Storm Ruler\",\"requirements\":{\"Strength\":0,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Twin Princes' Greatsword\",\"requirements\":{\"Strength\":22,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Wolf Knight's Greatsword\",\"requirements\":{\"Strength\":24,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Wolnir's Holy Sword\",\"requirements\":{\"Strength\":13,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":13},\"type\":\"Greatswords\"},{\"name\":\"Bastard Sword\",\"requirements\":{\"Strength\":16,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Black Knight Sword\",\"requirements\":{\"Strength\":20,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatswords\"},{\"name\":\"Ledo's Great Hammer\",\"requirements\":{\"Strength\":60,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Quakestone Hammer\",\"requirements\":{\"Strength\":40,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Dragon Tooth\",\"requirements\":{\"Strength\":40,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Gargoyle Flame Hammer\",\"requirements\":{\"Strength\":22,\"Dexterity\":0,\"Intelligence\":9,\"Faith\":9},\"type\":\"Great Hammers\"},{\"name\":\"Great Club\",\"requirements\":{\"Strength\":28,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Great Mace\",\"requirements\":{\"Strength\":32,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Great Wooden Hammer\",\"requirements\":{\"Strength\":18,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Large Club\",\"requirements\":{\"Strength\":22,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Morne's Great Hammer\",\"requirements\":{\"Strength\":50,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":30},\"type\":\"Great Hammers\"},{\"name\":\"Old King's Great Hammer\",\"requirements\":{\"Strength\":30,\"Dexterity\":0,\"Intelligence\":10,\"Faith\":10},\"type\":\"Great Hammers\"},{\"name\":\"Pickaxe\",\"requirements\":{\"Strength\":18,\"Dexterity\":9,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Smough's Great Hammer\",\"requirements\":{\"Strength\":45,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Spiked Mace\",\"requirements\":{\"Strength\":21,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"Vordt's Great Hammer\",\"requirements\":{\"Strength\":30,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Great Hammers\"},{\"name\":\"White Birch Bow\",\"requirements\":{\"Strength\":8,\"Dexterity\":20,\"Intelligence\":0,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Dragonrider Bow\",\"requirements\":{\"Strength\":19,\"Dexterity\":15,\"Intelligence\":0,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Short Bow\",\"requirements\":{\"Strength\":7,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Longbow\",\"requirements\":{\"Strength\":9,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Darkmoon Longbow\",\"requirements\":{\"Strength\":7,\"Dexterity\":16,\"Intelligence\":10,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Composite Bow\",\"requirements\":{\"Strength\":12,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Black Bow of Pharis\",\"requirements\":{\"Strength\":9,\"Dexterity\":18,\"Intelligence\":0,\"Faith\":0},\"type\":\"Bows\"},{\"name\":\"Millwood Battle Axe\",\"requirements\":{\"Strength\":15,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Winged Knight Twinaxes\",\"requirements\":{\"Strength\":20,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Thrall Axe\",\"requirements\":{\"Strength\":8,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Man Serpent Hatchet\",\"requirements\":{\"Strength\":16,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Hand Axe\",\"requirements\":{\"Strength\":9,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Eleonora\",\"requirements\":{\"Strength\":20,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Dragonslayer's Axe\",\"requirements\":{\"Strength\":18,\"Dexterity\":14,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Butcher Knife\",\"requirements\":{\"Strength\":24,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Brigand Axe\",\"requirements\":{\"Strength\":14,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"},{\"name\":\"Battle Axe\",\"requirements\":{\"Strength\":12,\"Dexterity\":8,\"Intelligence\":0,\"Faith\":0},\"type\":\"Axes\"}]`;\nconst weapons = JSON.parse(weaponsData);\n\nexport default weapons;\n","const shieldsData = `[{\"name\":\"Buckler\",\"requirements\":{\"Strength\":7,\"Dexterity\":13,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Caduceus Round Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Crimson Parma\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Eastern Iron Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Elkhorn Round Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Golden Falcon Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Iron Round Shield\",\"requirements\":{\"Strength\":5,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Leather Shield\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Llewellyn Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Plank Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Sacred Bloom Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Small Leather Shield\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Target Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":11,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Red and White Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Ghru Rotshield\",\"requirements\":{\"Strength\":5,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Hawkwood's Shield\",\"requirements\":{\"Strength\":5,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Warrior's Round Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Small Shields\"},{\"name\":\"Dragonhead Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":11,\"Faith\":12},\"type\":\"Small Shields\"},{\"name\":\"Round Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Black Knight Shield\",\"requirements\":{\"Strength\":18,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Blue Wooden Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Crest Shield\",\"requirements\":{\"Strength\":14,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Dragon Crest Shield\",\"requirements\":{\"Strength\":14,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"East-West Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Golden Wing Crest Shield\",\"requirements\":{\"Strength\":14,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Grass Crest Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Knight Shield\",\"requirements\":{\"Strength\":13,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Sunset Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Wooden Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Sunlight Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Carthus Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Porcine Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Silver Eagle Kite Shield\",\"requirements\":{\"Strength\":11,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Silver Knight Shield\",\"requirements\":{\"Strength\":16,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Pierce Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Pontiff Knight Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Spider Shield\",\"requirements\":{\"Strength\":10,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Spiked Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":12,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Spirit Tree Crest Shield\",\"requirements\":{\"Strength\":14,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Stone Parma\",\"requirements\":{\"Strength\":17,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Wargod Wooden Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Kite Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Large Leather Shield\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Shield of Want\",\"requirements\":{\"Strength\":18,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Lothric Knight Shield\",\"requirements\":{\"Strength\":18,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Ethereal Oak Shield\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Follower Shield\",\"requirements\":{\"Strength\":9,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Normal Shields\"},{\"name\":\"Ancient Dragon Greatshield\",\"requirements\":{\"Strength\":16,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Black Iron Greatshield\",\"requirements\":{\"Strength\":32,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Bonewheel Shield\",\"requirements\":{\"Strength\":30,\"Dexterity\":10,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Curse Ward Greatshield\",\"requirements\":{\"Strength\":34,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Greatshield of Glory\",\"requirements\":{\"Strength\":40,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Dragonslayer Greatshield\",\"requirements\":{\"Strength\":38,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Lothric Knight Greatshield\",\"requirements\":{\"Strength\":36,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Moaning Shield\",\"requirements\":{\"Strength\":50,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Havel's Greatshield\",\"requirements\":{\"Strength\":40,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Stone Greatshield\",\"requirements\":{\"Strength\":38,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Twin Dragon Greatshield\",\"requirements\":{\"Strength\":16,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Wolf Knight's Greatshield\",\"requirements\":{\"Strength\":30,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Yhorm's Greatshield\",\"requirements\":{\"Strength\":40,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Cathedral Knight Greatshield\",\"requirements\":{\"Strength\":32,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Giant Door Shield\",\"requirements\":{\"Strength\":45,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Greatshields\"},{\"name\":\"Dragonhead Greatshield\",\"requirements\":{\"Strength\":35,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":15},\"type\":\"Greatshields\"}]`;\nconst shields = JSON.parse(shieldsData);\n\nexport default shields;\n","const catalystsData = `[{\"name\":\"Pyromancy Flame\",\"requirements\":{\"Strength\":0,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":0},\"type\":\"Pyromancy Flames\"},{\"name\":\"Pyromancer's Parting Flame\",\"requirements\":{\"Strength\":15,\"Dexterity\":0,\"Intelligence\":13,\"Faith\":13},\"type\":\"Pyromancy Flames\"},{\"name\":\"Court Sorcerer's Staff\",\"requirements\":{\"Strength\":6,\"Dexterity\":0,\"Intelligence\":14,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Heretic's Staff\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":16,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Izalith Staff\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":14,\"Faith\":10},\"type\":\"Staves\"},{\"name\":\"Man-grub Staff\",\"requirements\":{\"Strength\":9,\"Dexterity\":0,\"Intelligence\":18,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Sage's Crystal Staff\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":24,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Sorcerer's Staff\",\"requirements\":{\"Strength\":6,\"Dexterity\":0,\"Intelligence\":10,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Storyteller's Staff\",\"requirements\":{\"Strength\":6,\"Dexterity\":0,\"Intelligence\":12,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Mendicant's Staff\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":18,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Witchtree Branch\",\"requirements\":{\"Strength\":7,\"Dexterity\":0,\"Intelligence\":18,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Archdeacon's Great Staff\",\"requirements\":{\"Strength\":8,\"Dexterity\":0,\"Intelligence\":12,\"Faith\":12},\"type\":\"Staves\"},{\"name\":\"Murky Longstaff\",\"requirements\":{\"Strength\":6,\"Dexterity\":0,\"Intelligence\":12,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Preacher's Right Arm\",\"requirements\":{\"Strength\":12,\"Dexterity\":0,\"Intelligence\":14,\"Faith\":0},\"type\":\"Staves\"},{\"name\":\"Canvas Talisman\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":14},\"type\":\"Talismans\"},{\"name\":\"Saint's Talisman\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":16},\"type\":\"Talismans\"},{\"name\":\"Sunless Talisman\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":24},\"type\":\"Talismans\"},{\"name\":\"Sunlight Talisman\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":14},\"type\":\"Talismans\"},{\"name\":\"Talisman\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":10},\"type\":\"Talismans\"},{\"name\":\"White Hair Talisman\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":16,\"Faith\":20},\"type\":\"Talismans\"},{\"name\":\"Caitha's Chime\",\"requirements\":{\"Strength\":3,\"Dexterity\":0,\"Intelligence\":12,\"Faith\":12},\"type\":\"Chimes\"},{\"name\":\"Cleric's Sacred Chime\",\"requirements\":{\"Strength\":3,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":14},\"type\":\"Chimes\"},{\"name\":\"Crystal Chime\",\"requirements\":{\"Strength\":3,\"Dexterity\":0,\"Intelligence\":18,\"Faith\":18},\"type\":\"Chimes\"},{\"name\":\"Priest's Chime\",\"requirements\":{\"Strength\":3,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":10},\"type\":\"Chimes\"},{\"name\":\"Saint-tree Bellvine\",\"requirements\":{\"Strength\":3,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":18},\"type\":\"Chimes\"},{\"name\":\"Yorshka's Chime\",\"requirements\":{\"Strength\":3,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":30},\"type\":\"Chimes\"},{\"name\":\"Sacred Chime of Filianore\",\"requirements\":{\"Strength\":4,\"Dexterity\":0,\"Intelligence\":0,\"Faith\":18},\"type\":\"Chimes\"}]`;\nconst catalysts = JSON.parse(catalystsData);\n\nexport default catalysts;\n","const spellsData = `[{\"name\":\"Acid Surge\",\"requirements\":{\"Intelligence\":0,\"Faith\":13,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Black Fire Orb\",\"requirements\":{\"Intelligence\":20,\"Faith\":20,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Black Flame\",\"requirements\":{\"Intelligence\":15,\"Faith\":15,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Black Serpent\",\"requirements\":{\"Intelligence\":15,\"Faith\":15,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Boulder Heave\",\"requirements\":{\"Intelligence\":8,\"Faith\":12,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Bursting Fireball\",\"requirements\":{\"Intelligence\":18,\"Faith\":12,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Carthus Beacon\",\"requirements\":{\"Intelligence\":12,\"Faith\":12,\"Slots\":2},\"type\":\"Pyromancies\"},{\"name\":\"Carthus Flame Arc\",\"requirements\":{\"Intelligence\":10,\"Faith\":10,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Chaos Bed Vestiges\",\"requirements\":{\"Intelligence\":20,\"Faith\":10,\"Slots\":2},\"type\":\"Pyromancies\"},{\"name\":\"Chaos Storm\",\"requirements\":{\"Intelligence\":0,\"Faith\":0,\"Slots\":2},\"type\":\"Pyromancies\"},{\"name\":\"Fire Orb\",\"requirements\":{\"Intelligence\":8,\"Faith\":8,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Fire Surge\",\"requirements\":{\"Intelligence\":6,\"Faith\":0,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Fire Whip\",\"requirements\":{\"Intelligence\":13,\"Faith\":8,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Fireball\",\"requirements\":{\"Intelligence\":6,\"Faith\":6,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Firestorm\",\"requirements\":{\"Intelligence\":18,\"Faith\":0,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Flame Fan\",\"requirements\":{\"Intelligence\":15,\"Faith\":15,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Flash Sweat\",\"requirements\":{\"Intelligence\":6,\"Faith\":6,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Floating Chaos\",\"requirements\":{\"Intelligence\":16,\"Faith\":16,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Great Chaos Fire Orb\",\"requirements\":{\"Intelligence\":0,\"Faith\":0,\"Slots\":2},\"type\":\"Pyromancies\"},{\"name\":\"Great Combustion\",\"requirements\":{\"Intelligence\":10,\"Faith\":10,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Iron Flesh\",\"requirements\":{\"Intelligence\":8,\"Faith\":0,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Poison Mist\",\"requirements\":{\"Intelligence\":0,\"Faith\":10,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Power Within\",\"requirements\":{\"Intelligence\":10,\"Faith\":10,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Profaned Flame\",\"requirements\":{\"Intelligence\":25,\"Faith\":0,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Profuse Sweat\",\"requirements\":{\"Intelligence\":6,\"Faith\":6,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Rapport\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Sacred Flame\",\"requirements\":{\"Intelligence\":8,\"Faith\":8,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Seething Chaos\",\"requirements\":{\"Intelligence\":18,\"Faith\":18,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Toxic Mist\",\"requirements\":{\"Intelligence\":0,\"Faith\":15,\"Slots\":1},\"type\":\"Pyromancies\"},{\"name\":\"Warmth\",\"requirements\":{\"Intelligence\":0,\"Faith\":25,\"Slots\":2},\"type\":\"Pyromancies\"},{\"name\":\"Affinity\",\"requirements\":{\"Intelligence\":32,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Aural Decoy\",\"requirements\":{\"Intelligence\":18,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Cast Light\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Chameleon\",\"requirements\":{\"Intelligence\":12,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Crystal Hail\",\"requirements\":{\"Intelligence\":18,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Crystal Magic Weapon\",\"requirements\":{\"Intelligence\":30,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Crystal Soul Spear\",\"requirements\":{\"Intelligence\":48,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Dark Edge\",\"requirements\":{\"Intelligence\":30,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Deep Soul\",\"requirements\":{\"Intelligence\":12,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Farron Dart\",\"requirements\":{\"Intelligence\":8,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Farron Flashsword\",\"requirements\":{\"Intelligence\":23,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Farron Hail\",\"requirements\":{\"Intelligence\":28,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Frozen Weapon\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Great Deep Soul\",\"requirements\":{\"Intelligence\":20,\"Faith\":0,\"Slots\":2},\"type\":\"Sorceries\"},{\"name\":\"Great Farron Dart\",\"requirements\":{\"Intelligence\":23,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Great Heavy Soul Arrow\",\"requirements\":{\"Intelligence\":18,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Great Magic Shield\",\"requirements\":{\"Intelligence\":18,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Great Magic Weapon\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Great Soul Arrow\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Great Soul Dregs\",\"requirements\":{\"Intelligence\":40,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Heavy Soul Arrow\",\"requirements\":{\"Intelligence\":13,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Hidden Body\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Hidden Weapon\",\"requirements\":{\"Intelligence\":12,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Homing Crystal Soulmass\",\"requirements\":{\"Intelligence\":30,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Homing Soulmass\",\"requirements\":{\"Intelligence\":20,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Magic Shield\",\"requirements\":{\"Intelligence\":10,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Magic Weapon\",\"requirements\":{\"Intelligence\":10,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Old Moonlight\",\"requirements\":{\"Intelligence\":25,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Pestilent Mercury\",\"requirements\":{\"Intelligence\":0,\"Faith\":0,\"Slots\":0},\"type\":\"Sorceries\"},{\"name\":\"Pestilent Mist\",\"requirements\":{\"Intelligence\":30,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Repair\",\"requirements\":{\"Intelligence\":15,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Snap Freeze\",\"requirements\":{\"Intelligence\":18,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Soul Arrow\",\"requirements\":{\"Intelligence\":10,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Soul Greatsword\",\"requirements\":{\"Intelligence\":22,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Soul Spear\",\"requirements\":{\"Intelligence\":32,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Soul Stream\",\"requirements\":{\"Intelligence\":45,\"Faith\":0,\"Slots\":2},\"type\":\"Sorceries\"},{\"name\":\"Spook\",\"requirements\":{\"Intelligence\":10,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Twisted Wall of Light\",\"requirements\":{\"Intelligence\":27,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"White Dragon Breath\",\"requirements\":{\"Intelligence\":50,\"Faith\":0,\"Slots\":1},\"type\":\"Sorceries\"},{\"name\":\"Atonement\",\"requirements\":{\"Intelligence\":0,\"Faith\":18,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Blessed Weapon\",\"requirements\":{\"Intelligence\":0,\"Faith\":15,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Bountiful Light\",\"requirements\":{\"Intelligence\":0,\"Faith\":25,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Bountiful Sunlight\",\"requirements\":{\"Intelligence\":0,\"Faith\":35,\"Slots\":2},\"type\":\"Miracles\"},{\"name\":\"Caressing Tears\",\"requirements\":{\"Intelligence\":0,\"Faith\":12,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Dark Blade\",\"requirements\":{\"Intelligence\":0,\"Faith\":25,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Darkmoon Blade\",\"requirements\":{\"Intelligence\":0,\"Faith\":30,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Dead Again\",\"requirements\":{\"Intelligence\":15,\"Faith\":23,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Deep Protection\",\"requirements\":{\"Intelligence\":0,\"Faith\":20,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Divine Pillars of Light\",\"requirements\":{\"Intelligence\":0,\"Faith\":30,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Dorhys' Gnawing\",\"requirements\":{\"Intelligence\":0,\"Faith\":25,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Emit Force\",\"requirements\":{\"Intelligence\":0,\"Faith\":18,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Force\",\"requirements\":{\"Intelligence\":0,\"Faith\":12,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Gnaw\",\"requirements\":{\"Intelligence\":0,\"Faith\":18,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Great Heal\",\"requirements\":{\"Intelligence\":0,\"Faith\":25,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Great Lightning Spear\",\"requirements\":{\"Intelligence\":0,\"Faith\":30,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Great Magic Barrier\",\"requirements\":{\"Intelligence\":0,\"Faith\":25,\"Slots\":2},\"type\":\"Miracles\"},{\"name\":\"Heal\",\"requirements\":{\"Intelligence\":0,\"Faith\":12,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Heal Aid\",\"requirements\":{\"Intelligence\":0,\"Faith\":8,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Homeward\",\"requirements\":{\"Intelligence\":0,\"Faith\":18,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Lifehunt Scythe\",\"requirements\":{\"Intelligence\":0,\"Faith\":22,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Lightning Arrow\",\"requirements\":{\"Intelligence\":0,\"Faith\":35,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Lightning Blade\",\"requirements\":{\"Intelligence\":0,\"Faith\":30,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Lightning Spear\",\"requirements\":{\"Intelligence\":0,\"Faith\":20,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Lightning Stake\",\"requirements\":{\"Intelligence\":0,\"Faith\":35,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Lightning Storm\",\"requirements\":{\"Intelligence\":0,\"Faith\":45,\"Slots\":2},\"type\":\"Miracles\"},{\"name\":\"Magic Barrier\",\"requirements\":{\"Intelligence\":0,\"Faith\":15,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Med Heal\",\"requirements\":{\"Intelligence\":0,\"Faith\":15,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Projected Heal\",\"requirements\":{\"Intelligence\":0,\"Faith\":28,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Replenishment\",\"requirements\":{\"Intelligence\":0,\"Faith\":15,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Sacred Oath\",\"requirements\":{\"Intelligence\":0,\"Faith\":28,\"Slots\":2},\"type\":\"Miracles\"},{\"name\":\"Seek Guidance\",\"requirements\":{\"Intelligence\":0,\"Faith\":12,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Soothing Sunlight\",\"requirements\":{\"Intelligence\":0,\"Faith\":45,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Sunlight Spear\",\"requirements\":{\"Intelligence\":0,\"Faith\":40,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Tears of Denial\",\"requirements\":{\"Intelligence\":0,\"Faith\":15,\"Slots\":2},\"type\":\"Miracles\"},{\"name\":\"Vow of Silence\",\"requirements\":{\"Intelligence\":0,\"Faith\":30,\"Slots\":2},\"type\":\"Miracles\"},{\"name\":\"Way of White Corona\",\"requirements\":{\"Intelligence\":0,\"Faith\":18,\"Slots\":1},\"type\":\"Miracles\"},{\"name\":\"Wrath of the Gods\",\"requirements\":{\"Intelligence\":0,\"Faith\":30,\"Slots\":2},\"type\":\"Miracles\"}]`;\nconst spells = JSON.parse(spellsData);\n\nexport default spells;\n","const locations = {\n  'Cemetery of Ash': [\n    'Broken Straight Sword',\n    'East-West Shield',\n    \"Hawkwood's Shield\",\n    'Sunset Shield',\n  ],\n\n  'High Wall of Lothric': [\n    'Astora Straight Sword',\n    'Longbow',\n    'Club',\n    'Mail Breaker',\n    'Broadsword',\n    'Silver Eagle Kite Shield',\n    'Rapier',\n    'Lucerne',\n    'Claymore',\n  ],\n\n  'Undead Settlement': [\n    \"Small Leather Shield\",\n    \"Whip\",\n    \"Reinforced Club\",\n    \"Blue Wooden Shield\",\n    \"Great Scythe\",\n    \"Caduceus Round Shield\",\n    \"Hand Axe\",\n    \"Caestus\",\n    \"Red Hilted Halberd\",\n    \"Saint's Talisman\",\n    \"Large Club\",\n    \"Wargod Wooden Shield\",\n    \"Partizan\",\n  ],\n\n  'Road of Sacrifices': [\n    \"Brigand Axe\",\n    \"Brigand Twindaggers\",\n    \"Grass Crest Shield\",\n    \"Twin Dragon Greatshield\",\n    \"Great Magic Weapon\",\n    \"Sellsword Twinblades\",\n    \"Golden Falcon Shield\",\n    \"Heretic's Staff\",\n  ],\n\n  'Farron Keep': [\n    \"Iron Flesh\",\n    \"Greataxe\",\n    \"Lightning Spear\",\n    \"Dragon Crest Shield\",\n    \"Stone Parma\",\n    \"Sunlight Talisman\",\n  ],\n\n  'Cathedral of the Deep': [\n    \"Arbalest\",\n    \"Astora Greatsword\",\n    \"Crest Shield\",\n    \"Curse Ward Greatshield\",\n    \"Executioner's Greatsword\",\n    \"Notched Whip\",\n    \"Saint Bident\",\n    \"Saint-tree Bellvine\",\n    \"Seek Guidance\",\n  ],\n\n  'Smouldering Lake': [\n    \"Black Iron Greatshield\",\n    \"Black Knight Greataxe\",\n    \"Black Knight Greatsword\",\n    \"Black Knight Shield\",\n    \"Bonewheel Shield\",\n    \"Carthus Shotel\",\n    \"Fume Ultra Greatsword\",\n    \"Ghru Rotshield\",\n    \"Lightning Stake\",\n    \"Llewellyn Shield\",\n    \"Rotten Ghru Curved Sword\",\n    \"Rotten Ghru Dagger\",\n    \"Rotten Ghru Spear\",\n    \"Scimitar\",\n  ],\n\n  'Irithyll of the Boreal Valley': [\n    \"Dragonslayer Greatbow\",\n    \"Great Heal\",\n    \"Painting Guardian's Curved Sword\",\n    \"Smough's Great Hammer\",\n    \"Witchtree Branch\",\n  ],\n\n  'Irithyll Dungeon': [\n    \"Lightning Blade\",\n    \"Pickaxe\",\n    \"Profaned Flame\",\n  ],\n\n  'Profaned Capital': [\n    \"Onislayer Greatbow\",\n    \"Storm Ruler\",\n    \"Wrath of the Gods\",\n  ],\n\n  'Anor Londo': [\n    \"Silver Knight Shield\",\n  ],\n\n  'Lothric Castle': [\n    \"Broken Straight Sword\",\n    \"Dagger\",\n    \"Greataxe\",\n    \"Halberd\",\n    \"Irithyll Rapier\",\n    \"Iron Round Shield\",\n    \"Knight's Crossbow\",\n    \"Light Crossbow\",\n    \"Long Sword\",\n    \"Lothric Knight Greatshield\",\n    \"Lothric Knight Greatsword\",\n    \"Lothric Knight Long Spear\",\n    \"Lothric Knight Shield\",\n    \"Lothric Knight Sword\",\n    \"Spear\",\n    \"Sunlight Straight Sword\",\n    \"Winged Knight Halberd\",\n    \"Winged Knight Twinaxes\",\n    \"Wooden Shield\",\n  ],\n\n  'Archdragon Peak': [\n    \"Dragonslayer Spear\",\n  ],\n\n  'Untended Graves': [\n    \"Black Knight Glaive\",\n  ],\n\n  'Grand Archives': [\n    \"Avelyn\",\n    \"Divine Pillars of Light\",\n    \"Golden Wing Crest Shield\",\n    \"Gotthard Twinswords\",\n    \"Onikiri and Ubadachi\",\n    \"Power Within\",\n    \"Sage's Crystal Staff\",\n    \"Soul Stream\",\n    \"Witch's Locks\",\n  ],\n\n  'Painted World of Ariandel': [\n    \"Ethereal Oak Shield\",\n    \"Millwood Battle Axe\",\n    \"Millwood Greatbow\",\n    \"Earth Seeker\",\n    \"Quakestone Hammer\",\n    \"Follower Javelin\",\n    \"Follower Sabre\",\n    \"Follower Shield\",\n    \"Follower Torch\",\n    \"Crow Quills\",\n    \"Crow Talons\",\n    \"Pyromancer's Parting Flame\",\n    \"Frozen Weapon\",\n    \"Snap Freeze\",\n    \"Way of White Corona\",\n  ],\n\n  'The Dreg Heap': [\n    'Aquamarine Dagger',\n    'Murky Hand Scythe',\n    'Murky Longstaff',\n    'Lothric War Banner',\n    'Harald Curved Greatsword',\n    'Splitleaf Greatsword',\n    'Giant Door Shield',\n    'Great Soul Dregs',\n    'Projected Heal',\n  ],\n\n  'The Ringed City': [\n    \"Dragonhead Shield\",\n    \"Dragonhead Greatshield\",\n    \"Crucifix of the Mad King\",\n    \"Ledo's Great Hammer\",\n    \"Preacher's Right Arm\",\n    \"Ringed Knight Paired Greatswords\",\n    \"Ringed Knight Spear\",\n    \"Ringed Knight Straight Sword\",\n    \"Sacred Chime of Filianore\",\n    \"White Birch Bow\",\n  ],\n};\n\nexport default locations;\n","const classes = [\n  {\n    name: 'Knight',\n    lvl: 9,\n    Vigor: 12,\n    Attunement: 10,\n    Endurance: 11,\n    Vitality: 15,\n    Strength: 13,\n    Dexterity: 12,\n    Intelligence: 9,\n    Faith: 9,\n    Luck: 7,\n    leftHand: ['Knight Shield'],\n    rightHand: ['Long Sword'],\n    spells: [],\n  },\n  {\n    name: 'Mercenary',\n    lvl: 8,\n    Vigor: 11,\n    Attunement: 12,\n    Endurance: 11,\n    Vitality: 10,\n    Strength: 10,\n    Dexterity: 16,\n    Intelligence: 10,\n    Faith: 8,\n    Luck: 9,\n    leftHand: ['Wooden Shield'],\n    rightHand: ['Sellsword Twinblades'],\n    spells: [],\n  },\n  {\n    name: 'Warrior',\n    lvl: 7,\n    Vigor: 14,\n    Attunement: 6,\n    Endurance: 12,\n    Vitality: 11,\n    Strength: 16,\n    Dexterity: 9,\n    Intelligence: 8,\n    Faith: 9,\n    Luck: 11,\n    leftHand: ['Round Shield'],\n    rightHand: ['Battle Axe'],\n    spells: [],\n  },\n  {\n    name: 'Herald',\n    lvl: 9,\n    Vigor: 12,\n    Attunement: 10,\n    Endurance: 9,\n    Vitality: 12,\n    Strength: 12,\n    Dexterity: 11,\n    Intelligence: 8,\n    Faith: 13,\n    Luck: 11,\n    leftHand: ['Kite Shield', 'Talisman'],\n    rightHand: ['Spear'],\n    spells: ['Heal Aid'],\n  },\n  {\n    name: 'Thief',\n    lvl: 5,\n    Vigor: 10,\n    Attunement: 11,\n    Endurance: 10,\n    Vitality: 9,\n    Strength: 9,\n    Dexterity: 13,\n    Intelligence: 10,\n    Faith: 8,\n    Luck: 14,\n    leftHand: ['Iron Round Shield'],\n    rightHand: [\"Bandit's Knife\", 'Short Bow'],\n    spells: [],\n  },\n  {\n    name: 'Assassin',\n    lvl: 10,\n    Vigor: 10,\n    Attunement: 14,\n    Endurance: 11,\n    Vitality: 10,\n    Strength: 10,\n    Dexterity: 14,\n    Intelligence: 11,\n    Faith: 9,\n    Luck: 10,\n    leftHand: ['Target Shield', \"Sorcerer's Staff\"],\n    rightHand: ['Estoc'],\n    spells: ['Spook'],\n  },\n  {\n    name: 'Sorcerer',\n    lvl: 6,\n    Vigor: 9,\n    Attunement: 16,\n    Endurance: 9,\n    Vitality: 7,\n    Strength: 7,\n    Dexterity: 12,\n    Intelligence: 16,\n    Faith: 7,\n    Luck: 12,\n    leftHand: ['Leather Shield', \"Sorcerer's Staff\"],\n    rightHand: ['Mail Breaker'],\n    spells: ['Soul Arrow', 'Heavy Soul Arrow'],\n  },\n  {\n    name: 'Pyromancer',\n    lvl: 8,\n    Vigor: 11,\n    Attunement: 12,\n    Endurance: 10,\n    Vitality: 8,\n    Strength: 12,\n    Dexterity: 9,\n    Intelligence: 14,\n    Faith: 14,\n    Luck: 7,\n    leftHand: ['Caduceus Round Shield', \"Pyromancy Flame\"],\n    rightHand: ['Hand Axe'],\n    spells: ['Fireball'],\n  },\n  {\n    name: 'Cleric',\n    lvl: 7,\n    Vigor: 10,\n    Attunement: 14,\n    Endurance: 9,\n    Vitality: 7,\n    Strength: 12,\n    Dexterity: 8,\n    Intelligence: 7,\n    Faith: 16,\n    Luck: 13,\n    leftHand: ['Blue Wooden Shield', \"Cleric's Sacred Chime\"],\n    rightHand: ['Mace'],\n    spells: ['Heal', 'Force'],\n  },\n  {\n    name: 'Deprived',\n    lvl: 1,\n    Vigor: 10,\n    Attunement: 10,\n    Endurance: 10,\n    Vitality: 10,\n    Strength: 10,\n    Dexterity: 10,\n    Intelligence: 10,\n    Faith: 10,\n    Luck: 10,\n    leftHand: ['Plank Shield'],\n    rightHand: ['Club'],\n    spells: [],\n  },\n];\n\nexport default classes;\n","import weapons from './weapons';\nimport shields from './shields';\nimport catalysts from './catalysts';\nimport spells from './spells';\nimport locations from './locations';\nimport classes from './classes';\n\nexport const allItems = {\n  weapons,\n  shields,\n  catalysts,\n  spells,\n};\n\nexport const catalystsToMagicPairs = {\n  'Pyromancy Flames': 'Pyromancies',\n  Staves: 'Sorceries',\n  Talismans: 'Miracles',\n  Chimes: 'Miracles',\n};\n\nexport const skippedTypes = [\n  'Bows',\n  'Geatbows',\n  'Crossbows',\n];\n\nexport const stats = [\n  'Vigor',\n  'Attunement',\n  'Endurance',\n  'Vitality',\n  'Strength',\n  'Dexterity',\n  'Intelligence',\n  'Faith',\n  'Luck',\n];\n\nexport const attunementSlots = [\n  10,\n  14,\n  18,\n  24,\n  30,\n  40,\n  50,\n  60,\n  80,\n  99,\n];\n\nexport {\n  locations,\n  classes,\n};\n","import { attunementSlots, allItems } from './data';\n\nexport const getRandomFromArray = (array) => array[Math.floor(Math.random() * array.length)];\n\nexport const getNearestSlotsCount = (attunement) => {\n  let slotsCount = 0;\n  for (let i = 0; attunementSlots; i++) {\n    if (attunement < attunementSlots[i]) break;\n    slotsCount = i + 1;\n  }\n\n  return slotsCount;\n};\n\nexport const setAllFounded = (char) => {\n  const keys = Object.keys(allItems);\n  keys.forEach((key) => {\n    allItems[key].forEach((item) => {\n      char.setFounded(key, item.name);\n    });\n  });\n};\n\nexport const findInAllItems = (itemName) => {\n  const itemTypes = Object.keys(allItems);\n  let item;\n\n  itemTypes.forEach((itemType) => {\n    const possibleItem = allItems[itemType].find(({ name }) => name === itemName);\n    if (possibleItem) {\n      item = { item: possibleItem, itemType };\n    }\n  });\n\n  return item;\n};\n\nexport const isItemInList = (list, itemName) => {\n  const newList = [];\n  const listTypes = Object.keys(list);\n\n  listTypes.forEach((listType) => {\n    const itemTypes = Object.keys(list[listType]);\n\n    itemTypes.forEach((itemType) => newList.push(...list[listType][itemType]));\n  });\n\n  return !!newList.find(({ name }) => name === itemName);\n};\n\nexport const filterAllItems = (value) => {\n  const itemTypes = Object.keys(allItems);\n  const filteredItems = {};\n\n  itemTypes.forEach((itemType) => {\n    const data = allItems[itemType].filter(\n      ({ name }) => name.toLowerCase().includes(value.toLowerCase()),\n    );\n    if (data.length) {\n      filteredItems[itemType] = data;\n    }\n  });\n\n  return filteredItems;\n};\n","import { getRandomFromArray, getNearestSlotsCount } from './helpers';\nimport {\n  classes, stats, allItems, skippedTypes, catalystsToMagicPairs,\n} from './data';\n\nexport default class Character {\n  constructor(savedData) {\n    if (savedData) {\n      this.className = savedData.className;\n      this.founded = savedData.founded;\n      this.leftHand = savedData.leftHand;\n      this.rightHand = savedData.rightHand;\n      this.spellSlots = savedData.spellSlots;\n      this.spells = savedData.spells;\n      this.state = savedData.state;\n    } else {\n      const {\n        name,\n        leftHand,\n        rightHand,\n        spells,\n        ...state\n      } = getRandomFromArray(classes);\n      this.state = state;\n      this.className = name;\n      this.leftHand = leftHand;\n      this.rightHand = rightHand;\n      this.spells = spells;\n      this.spellSlots = getNearestSlotsCount(state.Attunement);\n      this.founded = {};\n      this.setFounded('shields', leftHand[0]);\n      if (leftHand[1]) {\n        this.setFounded('catalysts', leftHand[1]);\n      }\n      rightHand.forEach((weaponName) => this.setFounded('weapons', weaponName));\n      spells.forEach((spellName) => this.setFounded('spells', spellName));\n    }\n  }\n\n  getCharToSave = () => ({\n    className: this.className,\n    founded: this.founded,\n    leftHand: this.leftHand,\n    rightHand: this.rightHand,\n    spellSlots: this.spellSlots,\n    spells: this.spells,\n    state: this.state,\n  })\n\n  updateStats = (stat, isLower) => {\n    const currentStat = this.state[stat];\n    if (isLower && currentStat > 0) {\n      this.state = {\n        ...this.state,\n        [stat]: currentStat - 1,\n        lvl: this.state.lvl - 1,\n      };\n    } else if (!isLower && currentStat < 99) {\n      this.state = {\n        ...this.state,\n        [stat]: currentStat + 1,\n        lvl: this.state.lvl + 1,\n      };\n    }\n    this.spellSlots = getNearestSlotsCount(this.state.Attunement);\n  }\n\n  updateRandomLvl = () => {\n    const stat = getRandomFromArray(stats);\n    this.state = {\n      ...this.state,\n      lvl: this.state.lvl + 1,\n      [stat]: this.state[stat] + 1,\n    };\n    this.spellSlots = getNearestSlotsCount(this.state.Attunement);\n\n    return stat;\n  }\n\n  updateRandomLevels = (count) => {\n    const updated = {};\n    for (let i = 0; i < count; i++) {\n      const stat = this.updateRandomLvl();\n      if (updated[stat]) {\n        updated[stat] += 1;\n      } else {\n        updated[stat] = 1;\n      }\n    }\n\n    return updated;\n  }\n\n  setFounded = (type, name) => {\n    const item = allItems[type].find((sItem) => sItem.name === name);\n    if (!this.founded[type]) this.founded[type] = {};\n    if (!this.founded[type][item.type]) this.founded[type][item.type] = [];\n\n    this.founded = {\n      ...this.founded,\n      [type]: {\n        ...this.founded[type],\n        [item.type]: [\n          ...this.founded[type][item.type],\n          item,\n        ],\n      },\n    };\n  }\n\n  removeFounded = (type, name) => {\n    const item = allItems[type].find((sItem) => sItem.name === name);\n    this.founded = {\n      ...this.founded,\n      [type]: {\n        ...this.founded[type],\n        [item.type]: this.founded[type][item.type].filter(\n          ({ name: itemName }) => itemName !== name,\n        ),\n      },\n    };\n  }\n\n  checkRequirements = ({\n    Strength,\n    Dexterity,\n    Intelligence,\n    Faith,\n  }, withCoeff) => (\n    this.state.Strength * (withCoeff ? 1.5 : 1) >= (Strength || 0)\n            && this.state.Dexterity >= (Dexterity || 0)\n            && this.state.Intelligence >= (Intelligence || 0)\n            && this.state.Faith >= (Faith || 0)\n  )\n\n  getRandomItemByStatsMeet = (itemType, coeff) => {\n    if (!this.founded[itemType]) return;\n    const types = Object.keys(this.founded[itemType]);\n    const foundedItems = [];\n    types.forEach((type) => {\n      if (skippedTypes.includes(type)) return;\n      foundedItems.push(...this.founded[itemType][type]);\n    });\n    const possibleItems = foundedItems.filter(\n      ({ requirements }) => this.checkRequirements(requirements, coeff),\n    );\n    const randomItem = getRandomFromArray(possibleItems);\n    // eslint-disable-next-line no-console\n    console.log({\n      founded: this.founded,\n      possibleItems,\n      foundedItems,\n      randomItem,\n    });\n\n    // eslint-disable-next-line consistent-return\n    return getRandomFromArray(possibleItems);\n  }\n\n  getRandomSpells = (type) => {\n    const spells = [];\n    let slotsLeft = this.spellSlots;\n    if (!slotsLeft || !type) return spells;\n    let stopper = 0;\n    const spellTypes = catalystsToMagicPairs[type];\n    if (!this.founded.spells || !this.founded.spells[spellTypes]) return spells;\n    let possibleSpells = this.founded.spells[spellTypes].filter((spell) => {\n      const { requirements: { Slots, ...rest } } = spell;\n      return this.checkRequirements(rest) && Slots <= slotsLeft;\n    });\n\n    if (!possibleSpells.length) return spells;\n\n    do {\n      stopper++;\n      const spell = getRandomFromArray(possibleSpells);\n      if (slotsLeft - spell.requirements.Slots < 0) {\n        possibleSpells = possibleSpells.filter(({ name }) => name === spell.name);\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      spells.push(spell);\n      slotsLeft -= spell.requirements.Slots;\n      possibleSpells = possibleSpells.filter(({ name }) => name !== spell.name);\n    } while (slotsLeft > 0 && possibleSpells.length && stopper < 20);\n\n    return spells.map(({ name }) => name);\n  }\n\n  getRandomItems = () => {\n    const { name: weapon } = this.getRandomItemByStatsMeet('weapons', true) || {};\n    const { name: shield } = this.getRandomItemByStatsMeet('shields') || {};\n    const { name: catalyst, type } = this.getRandomItemByStatsMeet('catalysts', true) || {};\n    const spells = this.getRandomSpells(type);\n\n    this.leftHand = [shield, catalyst].filter((a) => a);\n    this.rightHand = [weapon];\n    this.spells = spells;\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { stats } from '../data';\n\nconst Container = styled.div`\n  border: 1px solid black;\n  padding: 20px 40px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex: 1;\n`;\nconst StatsContainer = styled.div`\n  flex: 1;\n`;\nconst InfoContainer = styled.div`\n  margin: 0px 10px;\n  flex: 1;\n`;\nconst ControlsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst StatChangeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  border: 1px solid black;\n  margin: 5px;\n  flex: 1;\n`;\nconst StatName = styled.p`\n  flex: 1;\n`;\nconst Button = styled.button`\n  margin: 5px;\n  font-size: 20px;\n`;\nconst Input = styled.input`\n  margin: 5px;\n  text-align: center;\n  font-size: 25px;\n  width: 100px;\n`;\nconst Updated = styled.p`\n  flex: 1;\n`;\n\nexport default class Levelization extends Component {\n  state = {\n    input: '10',\n    lastUpdated: {},\n  }\n\n  renderAllStats = () => {\n    const { lastUpdated } = this.state;\n    const { state, spellSlots } = this.props;\n    return (\n      <>\n        <StatContainer>\n          <StatName>Level:</StatName>\n          <h4>{state.lvl}</h4>\n        </StatContainer>\n        <StatContainer>\n          <StatName>Spell Slots</StatName>\n          <h4>{spellSlots}</h4>\n        </StatContainer>\n        {stats.map((stat) => (\n          <StatChangeContainer key={stat}>\n            <Button onClick={this.updateStat(stat, true)}>-</Button>\n            <StatContainer>\n              <StatName>{`${stat}:`}</StatName>\n              {\n                lastUpdated[stat] ? (\n                  <Updated>{`+${lastUpdated[stat]}`}</Updated>\n                ) : null\n              }\n              <h4>{state[stat]}</h4>\n            </StatContainer>\n            <Button onClick={this.updateStat(stat)}>+</Button>\n          </StatChangeContainer>\n        ))}\n      </>\n    );\n  }\n\n  updateStat = (stat, isLower) => () => {\n    const { updateStats } = this.props;\n    updateStats(stat, isLower);\n  }\n\n  handleChange = (event) => {\n    const input = event.target.value;\n    if (Number.isNaN(input)) return;\n\n    this.setState({\n      input,\n    });\n  }\n\n  updateOneLvl = () => {\n    const { updateRandomLevels } = this.props;\n    const updated = updateRandomLevels(1);\n    this.setState({ lastUpdated: updated });\n  }\n\n  updateLevels = () => {\n    const { input } = this.state;\n    const { updateRandomLevels } = this.props;\n    const updated = updateRandomLevels(+input);\n    this.setState({ lastUpdated: updated });\n  }\n\n  render() {\n    const { className } = this.props;\n    const { input } = this.state;\n\n    return (\n      <Container>\n        <InfoContainer>\n          <h1>{className}</h1>\n          <StatsContainer>\n            {this.renderAllStats()}\n          </StatsContainer>\n        </InfoContainer>\n        <ControlsContainer>\n          <Button onClick={this.updateOneLvl}>Update 1 lvl</Button>\n          <Input value={input} onChange={this.handleChange} />\n          <Button onClick={this.updateLevels}>{`Update ${input} lvl's`}</Button>\n        </ControlsContainer>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  border: 1px solid black;\n  padding: 20px 40px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst Button = styled.button`\n  margin: 10px;\n  font-size: 20px;\n  width: 150px;\n  height: 40px;\n`;\nconst ItemsContainer = styled.div`\n  display: flex;\n`;\nconst ItemContainer = styled.div`\n  display: flex;\n  flex: 1;\n  border: 1px solid black;\n  margin: 10px;\n  padding: 5px 25px;\n  font-size: 25px;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst HandContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n  margin: 10px;\n  justify-content: space-between;\n`;\n\nexport default class ItemRandomizer extends Component {\n  renderItems = () => {\n    const { rightHand, leftHand } = this.props;\n\n    return (\n      <ItemsContainer>\n        <ItemContainer>\n          <HandContainer>\n            <div>R:</div>\n            {rightHand[0]}\n          </HandContainer>\n        </ItemContainer>\n        <ItemContainer>\n          <HandContainer>\n            <div>L:</div>\n            {leftHand[0]}\n          </HandContainer>\n          {leftHand[1] ? (\n            <HandContainer>\n              <div>L:</div>\n              {leftHand[1]}\n            </HandContainer>\n          ) : null}\n        </ItemContainer>\n      </ItemsContainer>\n    );\n  };\n\n  renderSpells = () => {\n    const { spells } = this.props;\n\n    return (\n      <ItemsContainer>\n        {spells.map((spell) => (\n          <ItemContainer>\n            <HandContainer>\n              <div>S:</div>\n              {spell}\n            </HandContainer>\n          </ItemContainer>\n        ))}\n      </ItemsContainer>\n    );\n  };\n\n  render() {\n    const { getRandomItems, clear } = this.props;\n\n    return (\n      <Container>\n        {this.renderItems()}\n        {this.renderSpells()}\n        <Button onClick={getRandomItems}>Randomize</Button>\n        <Button onClick={clear}>Clear</Button>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { locations } from '../data';\nimport { isItemInList, findInAllItems } from '../helpers';\n\nconst Container = styled.div`\n  border: 1px solid black;\n  padding: 20px 140px;\n  height: 50%;\n  flex: 1;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n`;\nconst Location = styled.div`\n  border: 1px solid black;\n  padding: 20px;\n`;\nconst LocationHeader = styled.h2`\n  flex: 1;\n`;\nconst LocationItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 2px solid ${(props) => (props.active ? \"blue\" : \"black\")};\n  justify-content: center;\n  align-items: center;\n`;\nconst LocationItem = styled.p`\n  margin: 10px;\n  margin-left: 20px;\n  flex: 1;\n`;\n\nexport default class LocationsItems extends Component {\n    renderLocationsData = () => {\n      const { founded } = this.props;\n      const locationsList = Object.keys(locations);\n\n      return locationsList.map((locationName) => (\n        <Location key={locationName}>\n          <LocationHeader>{locationName}</LocationHeader>\n          {locations[locationName].map((item) => {\n            const checked = isItemInList(founded, item);\n\n            return (\n              <LocationItemContainer active={checked} key={item}>\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={checked}\n                  onClick={\n                  checked ? this.removeFounded(item) : this.setFounded(item)\n                  }\n                />\n                <LocationItem>{item}</LocationItem>\n              </LocationItemContainer>\n            );\n          })}\n        </Location>\n      ));\n    }\n\n    setFounded = (name) => () => {\n      const { setFounded } = this.props;\n      const { itemType } = findInAllItems(name);\n\n      setFounded(itemType, name);\n    }\n\n    removeFounded = (name) => () => {\n      const { removeFounded } = this.props;\n      const { itemType } = findInAllItems(name);\n\n      removeFounded(itemType, name);\n    }\n\n    render() {\n      return (\n        <Container>\n          {this.renderLocationsData()}\n        </Container>\n      );\n    }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { allItems } from '../data';\nimport { isItemInList, filterAllItems } from '../helpers';\n\nconst Container = styled.div`\n  border: 1px solid black;\n  padding: 20px 140px;\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n  flex-direction: column;\n`;\nconst ContentContainer = styled.div`\n  border: 1px solid black;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst SearchContainer = styled.div`\n  height: 20%;\n`;\nconst Item = styled.div`\n  flex: 1;\n  padding: 5px 20px;\n`;\nconst ItemHeader = styled.h2`\n  text-transform: capitalize;\n`;\nconst ItemItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 2px solid ${(props) => (props.checked ? \"blue\" : \"black\")};\n  justify-content: center;\n  align-items: center;\n`;\nconst ItemItem = styled.p`\n  margin: 10px;\n  margin-left: 20px;\n  flex: 1;\n`;\nconst Search = styled.input`\n  width: 100%;\n  height: 40px;\n  font-size: 30px;\n  padding: 0px 20px;\n  flex: 1;\n`;\n\nexport default class SearchItems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '',\n      itemsToRender: allItems,\n    };\n  }\n\n    renderItemsData = () => {\n      const { itemsToRender } = this.state;\n\n      const { founded } = this.props;\n      const itemsList = Object.keys(itemsToRender);\n\n      return itemsList.map((itemType) => (\n        <Item key={itemType}>\n          <ItemHeader>{itemType}</ItemHeader>\n          {itemsToRender[itemType].map((item) => {\n            const checked = isItemInList(founded, item.name);\n\n            return (\n              <ItemItemContainer checked={checked} key={item.name}>\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={checked}\n                  onClick={\n                  checked ? this.removeFounded(item, itemType) : this.setFounded(item, itemType)\n                  }\n                />\n                <ItemItem>{item.name}</ItemItem>\n              </ItemItemContainer>\n            );\n          })}\n        </Item>\n      ));\n    }\n\n    setFounded = (item, type) => () => {\n      const { name } = item;\n      const { setFounded } = this.props;\n\n      setFounded(type, name);\n    }\n\n    removeFounded = (item, type) => () => {\n      const { name } = item;\n      const { removeFounded } = this.props;\n\n      removeFounded(type, name);\n    }\n\n    handleChange = (event) => {\n      const input = event.target.value;\n\n      this.setState({\n        input,\n        itemsToRender: filterAllItems(input),\n      });\n    }\n\n    render() {\n      const { input } = this.state;\n\n      return (\n        <Container>\n          <SearchContainer>\n            <h1>Search</h1>\n            <Search type=\"search\" value={input} onChange={this.handleChange} />\n          </SearchContainer>\n          <ContentContainer>\n            {this.renderItemsData()}\n          </ContentContainer>\n        </Container>\n      );\n    }\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const STORAGE_KEY = 'DS3_CHARACTER';\n","import React from 'react';\nimport styled from 'styled-components';\nimport Character from './Character';\nimport Levelization from './Components/Levelization';\nimport ItemRandomizer from './Components/ItemRandomizer';\nimport LocationsItems from './Components/LocationsItems';\nimport SearchItems from './Components/SearchItems';\nimport { STORAGE_KEY } from './constants';\n\nconst { localStorage } = window;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n`;\nconst RowContainer = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let char;\n    const savedChar = localStorage.getItem(STORAGE_KEY);\n    if (!savedChar) {\n      char = new Character();\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(char.getCharToSave()));\n    } else {\n      char = new Character(JSON.parse(savedChar));\n    }\n\n    this.state = {\n      char,\n    };\n  }\n\n  saveCharToStorage = () => localStorage.setItem(\n  // eslint-disable-next-line react/destructuring-assignment\n    STORAGE_KEY, JSON.stringify(this.state.char.getCharToSave()),\n  );\n\n  updateChar = () => {\n    this.setState((prevState) => ({ char: prevState.char }));\n    this.saveCharToStorage();\n  };\n\n  updateStats = (...args) => {\n    const { char } = this.state;\n\n    char.updateStats(...args);\n    this.updateChar();\n  }\n\n  setFounded = (...args) => {\n    const { char } = this.state;\n\n    char.setFounded(...args);\n    this.updateChar();\n  }\n\n  removeFounded = (...args) => {\n    const { char } = this.state;\n\n    char.removeFounded(...args);\n    this.updateChar();\n  }\n\n  updateRandomLevels = (...args) => {\n    const { char } = this.state;\n\n    const updatedData = char.updateRandomLevels(...args);\n    this.updateChar();\n    return updatedData;\n  }\n\n  getRandomItems = () => {\n    const { char } = this.state;\n\n    char.getRandomItems();\n    this.updateChar();\n  }\n\n  resetCharacter = () => {\n    localStorage.removeItem(STORAGE_KEY);\n    window.location.reload(true);\n  }\n\n  render() {\n    const { char } = this.state;\n    const {\n      founded,\n      className,\n      state,\n      spellSlots,\n      rightHand,\n      leftHand,\n      spells,\n    } = char;\n\n    return (\n      <Container>\n        <RowContainer>\n          <LocationsItems\n            founded={founded}\n            setFounded={this.setFounded}\n            removeFounded={this.removeFounded}\n          />\n          <SearchItems\n            founded={founded}\n            setFounded={this.setFounded}\n            removeFounded={this.removeFounded}\n          />\n        </RowContainer>\n        <RowContainer>\n          <Levelization\n            className={className}\n            state={state}\n            spellSlots={spellSlots}\n            updateStats={this.updateStats}\n            updateRandomLevels={this.updateRandomLevels}\n          />\n          <ItemRandomizer\n            rightHand={rightHand}\n            leftHand={leftHand}\n            spells={spells}\n            getRandomItems={this.getRandomItems}\n            clear={this.resetCharacter}\n          />\n        </RowContainer>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}